{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "s184-fcap-prices-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_expose_prices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load from silver layer, perform analytics, and store to gold layer.",
				"activities": [
					{
						"name": "Compare Prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/3 - Expose (gold)/1_Compare_prices",
							"baseParameters": {
								"p_compare_to_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_compare_from_date": {
									"value": "@formatDateTime(subtractFromTime(pipeline().parameters.p_process_date, 2, 'Day'), 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"p_process_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-16T04:45:23Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_prices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest prices from external sources and save to bronze layer.",
				"activities": [
					{
						"name": "Ingest EEX prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/1 - Ingest (bronze)/2_Ingest_EEX_(SFTP)",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_eex')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_start_date": {
									"value": "@formatDateTime(subtractFromTime(pipeline().parameters.p_process_date, pipeline().globalParameters.days_to_retrieve, 'Day'), 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Endur Historical prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/1 - Ingest (bronze)/1_Ingest_Endur_Historical",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_endur_hist')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_start_date": {
									"value": "@formatDateTime(subtractFromTime(pipeline().parameters.p_process_date, pipeline().globalParameters.days_to_retrieve, 'Day'), 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest ICIS API prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/1 - Ingest (bronze)/3_Ingest_ICIS_API",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_icis')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_start_date": {
									"value": "@formatDateTime(subtractFromTime(pipeline().parameters.p_process_date, pipeline().globalParameters.days_to_retrieve, 'Day'), 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"p_end_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"p_process_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_datasource_eex": {
						"type": "String",
						"defaultValue": "EEX DataSource SFTP"
					},
					"v_datasource_endur_hist": {
						"type": "String",
						"defaultValue": "Endur Historical"
					},
					"v_datasource_icis": {
						"type": "String",
						"defaultValue": "ICIS API"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-17T06:49:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_optimize_prices_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Optimizes the delta lake for performance.",
				"activities": [
					{
						"name": "Optimize Silver and Gold delta tables",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/0 - Includes/optimize_lake"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"annotations": [],
				"lastPublishTime": "2021-10-18T11:09:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_prices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load from bronze layer, process, and store to silver layer.",
				"activities": [
					{
						"name": "Process EEX prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/2 - Process (silver)/2_Process_EEX",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_eex')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Process Endur Historical prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/2 - Process (silver)/1_Process_Endur_Historical",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_endur_hist')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Process ICIS API prices",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Dev/Price Analytics/2 - Process (silver)/3_Process_ICIS_API",
							"baseParameters": {
								"p_datasource_name": {
									"value": "@variables('v_datasource_icis')",
									"type": "Expression"
								},
								"p_ingest_date": {
									"value": "@formatDateTime(pipeline().parameters.p_process_date, 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks_fcap_prices_job",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"parameters": {
					"p_process_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_datasource_eex": {
						"type": "String",
						"defaultValue": "EEX DataSource SFTP"
					},
					"v_datasource_endur_hist": {
						"type": "String",
						"defaultValue": "Endur Historical"
					},
					"v_datasource_icis": {
						"type": "String",
						"defaultValue": "ICIS API"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-16T11:45:08Z"
			},
			"dependsOn": []
		}
	]
}